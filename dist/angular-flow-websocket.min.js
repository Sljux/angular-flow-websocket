"use strict";angular.module("ngFlow.websocket",["ngWebSocket"]).factory("FlowWebsocket",["$http","$websocket","$q","$interval",function(a,b,c,d){function e(b,c){return a({method:"POST",url:"https://ws.flowthings.io/session",headers:{"X-Auth-Account":b,"X-Auth-Token":c}})}function f(a,b){return(p(a.accountId)||p(a.token))&&m(s.errors.NO_CREDENTIALS),e(a.accountId,a.token).success(function(a){a.head.ok===!0||"true"===a.head.ok?(h(a.body.id),g(s.heartbeat.interval)):m(l(a.body.errors))}).error(function(a){m(a)}),t}function g(a){d(function(){n.send(s.heartbeat.message)},a)}function h(a){n=b("wss://ws.flowthings.io/session/"+a+"/ws"),n.onOpen(function(a){r.resolve(!0),console.log("opened",a)}),n.onClose(function(a){console.log("closed",a)}),n.onError(function(a){console.log("error",a)}),n.onMessage(function(a){var b=JSON.parse(a.data);if(console.log(b),"message"===b.type){var c=b.value.flowId;o(q[c])&&q[c](b.value)}})}function i(a,b){r.promise.then(function(){k("subscribe",a),angular.isFunction(b)&&(q[a]=b)})}function j(a){r.promise.then(function(){k("unsubscribe",a),delete q[a]})}function k(a,b,c){r.promise.then(function(){var d=c||s.baseMsgId++;n.send({msgId:d,object:"drop",type:a,flowId:b})})}function l(a){return a.join("\n")}function m(a){throw new Error(a)}var n,o=angular.isDefined,p=angular.isUndefined,q={},r=c.defer(),s={baseMsgId:1,heartbeat:{message:JSON.stringify({type:"heartbeat"}),interval:2e4},errors:{NO_CREDENTIALS:"Provide account Id and token",NO_SESSION_ID:"No session ID"}},t={flow:{subscribe:i,unsubscribe:j}};return f}]);